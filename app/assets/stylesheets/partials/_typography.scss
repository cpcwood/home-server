@font-face {
  font-family: 'RobotoTitle';
  src: font-url('RobotoSlab-Medium.ttf');
  src: font-url('RobotoSlab-Medium.ttf') format('truetype');
}

@font-face {
  font-family: 'RobotoBody';
  src: font-url('Roboto-Medium.ttf');
  src: font-url('Roboto-Medium.ttf') format('truetype');
}

h1 {
  font-family: 'RobotoTitle', Fallback, sans-serif;
}

body {
  font-family: 'RobotoBody', Fallback, sans-serif;
}


$p-font-sizes: (
  null  : 15px,
  small : 16px,
  medium: 17px,
  large : 19px
);

$h1-font-sizes: (
  null  : 28px,
  small : 31px,
  medium: 33px,
  large : 36px
);

// mixin for font size screen size set as 
@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      font-size: $fs-font-size;
    }
    @else {
      // If $fs-font-size is a key that exists in
      // $fs-breakpoints, use the value
      @if map-has-key($fs-breakpoints, $fs-breakpoint) {
        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
      }
      @media screen and (min-width: $fs-breakpoint) {
        font-size: $fs-font-size;
      }
    }
  }
}